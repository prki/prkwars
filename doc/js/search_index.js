var search_data = {"index":{"searchIndex":["bullet","bulletturret","constants","enemy","explosionparticle","game","gameover","gamespace","gamespacepersistence","gosu","object","play","player","popuptext","splash","stalker","turret","warp","zorder","correct_coords()","descendants()","enemy_spawn_point()","in_bounds()","move_down()","move_left()","move_right()","move_up()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","play()","play()","setup()","shoot_down()","shoot_left()","shoot_right()","shoot_up()","take_damage()","take_damage()","update()","update()","update()","update()","update()","update()","update()","update()","update()","prkwars.gemspec"],"longSearchIndex":["bullet","bulletturret","constants","enemy","explosionparticle","game","gameover","gamespace","gamespacepersistence","gosu","object","play","player","popuptext","splash","stalker","turret","warp","zorder","gamespacepersistence#correct_coords()","enemy::descendants()","gamespace#enemy_spawn_point()","gamespacepersistence#in_bounds()","player#move_down()","player#move_left()","player#move_right()","player#move_up()","bullet::new()","bulletturret::new()","explosionparticle::new()","game::new()","gameover::new()","gamespace::new()","play::new()","player::new()","popuptext::new()","stalker::new()","turret::new()","warp::new()","gameover#play()","splash#play()","splash#setup()","player#shoot_down()","player#shoot_left()","player#shoot_right()","player#shoot_up()","stalker#take_damage()","turret#take_damage()","bullet#update()","bulletturret#update()","explosionparticle#update()","play#update()","player#update()","popuptext#update()","stalker#update()","turret#update()","warp#update()",""],"info":[["Bullet","","Bullet.html","","<p>Class representing a bullet shot by the player. Destroys itself if is\npresent out of bounds.\n"],["BulletTurret","","BulletTurret.html","","<p>A bullet shot by the Turret enemy unit. Destroys itself if out of bounds.\n"],["Constants","","Constants.html","","<p>Module containing constants used throughout the game.\n"],["Enemy","","Enemy.html","","<p>A generic Enemy class inheriting from Chingu::Gameobject. Any enemy unit\ninherits from this class. The …\n"],["ExplosionParticle","","ExplosionParticle.html","","<p>Class used for holding behaviour of particles during explosions of various\nentitites.\n"],["Game","","Game.html","","<p>Game class is simply an encapsulation of the chingu window - essentially,\nthe entry point of the game. …\n"],["GameOver","","GameOver.html","","<p>Class representing the game over state shown when the player loses the\ngame.\n"],["GameSpace","","GameSpace.html","","<p>Class representing the space where the game is being played. Class is\nessentially an encapsulation for …\n"],["GamespacePersistence","","GamespacePersistence.html","","<p>Module used by classes as a mixin for collision checking with the gamespace\nso that they do not get out …\n"],["Gosu","","Gosu.html","",""],["Object","","Object.html","",""],["Play","","Play.html","","<p>A class representing the game state of playing the game itself.\n"],["Player","","Player.html","","<p>Class holding all the logic related to the player - input controller and\nany manipulation of player&#39;s …\n"],["PopupText","","PopupText.html","","<p>Class used for messages that pop up on the screen whenever something\nrelevant happens - e.g. score goes …\n"],["Splash","","Splash.html","","<p>Class representing the game state right after turning the game on.\n"],["Stalker","","Stalker.html","","<p>Class representing the Stalker enemy unit which is mobile but unable to\nshoot and endlessly moves towards …\n"],["Turret","","Turret.html","","<p>Class representing the Turret enemy unit which is stationary and endlessly\nshoots bullets in the direction …\n"],["Warp","","Warp.html","","<p>Class holding the warp effect used whenever an enemy game object spawns\nsomewhere.\n"],["ZOrder","","ZOrder.html","","<p>Module containing Z order of various game objects.\n"],["correct_coords","GamespacePersistence","GamespacePersistence.html#method-i-correct_coords","(entity, gamespace)","<p>A method determining game object coordinations in case they are out of\nbounds.\n"],["descendants","Enemy","Enemy.html#method-c-descendants","()","<p>Method returning all the descendants of the Enemy class. Used for collision\nchecks in the main game loop. …\n"],["enemy_spawn_point","GameSpace","GameSpace.html#method-i-enemy_spawn_point","(player_x, player_y)","<p>Returns a random spawn point from the list of spawn points defined by the\n<code>setup_spawn_points</code> method. …\n"],["in_bounds","GamespacePersistence","GamespacePersistence.html#method-i-in_bounds","(entity, gamespace)","<p>A method determining whether a gamespace <code>fully</code> contains a\ncertain game object.\n"],["move_down","Player","Player.html#method-i-move_down","()","<p>A method changing the player&#39;s y position by the\n<code>PLAYER_VELOCITY</code> constant.\n"],["move_left","Player","Player.html#method-i-move_left","()","<p>A method changing the player&#39;s x position by the\n<code>PLAYER_VELOCITY</code> constant.\n"],["move_right","Player","Player.html#method-i-move_right","()","<p>A method changing the player&#39;s x position by the\n<code>PLAYER_VELOCITY</code> constant.\n"],["move_up","Player","Player.html#method-i-move_up","()","<p>A method changing the player&#39;s y position by the\n<code>PLAYER_VELOCITY</code> constant.\n"],["new","Bullet","Bullet.html#method-c-new","(gamespace, options = {})","<p>Initializes the gamespace where the bullet is present in. Velocity is\npassed as a paremeter in the options …\n"],["new","BulletTurret","BulletTurret.html#method-c-new","(gamespace, options = {})","<p>Initializes gamespace in which the bullet is present and assigns the\nturret. Velocity of the bullet is …\n"],["new","ExplosionParticle","ExplosionParticle.html#method-c-new","(gamespace, options = {})","<p>Generates an explosion particle with a set fade_rate (chingu). X and Y\nvelocity is picked randomly between …\n"],["new","Game","Game.html#method-c-new","()","<p>Initialization of Game only creates a window of a specified size and pushes\nthe beginning game state …\n"],["new","GameOver","GameOver.html#method-c-new","(score, options = {})","<p>Initialization of the game over screen does nothing else but map inputs to\nthe <code>play</code> method (in case the …\n"],["new","GameSpace","GameSpace.html#method-c-new","(options = {})","<p>Initialization method sets up the spawn points for enemies and sets up the\nbackground image.\n"],["new","Play","Play.html#method-c-new","(options = {})","<p>Initialization method of Play maps input to the exit function, creates a\n<code>gamespace</code> to play in and spawns …\n"],["new","Player","Player.html#method-c-new","(gamespace, options = {})","<p>Initialization of player assigns gamespace to the player, their sprite and\nsets the input layout for …\n"],["new","PopupText","PopupText.html#method-c-new","(message, x, y, options = {})","<p>Initialization method for <code>PopupText</code> requires x, y to determine\nwhere the message gets spawned on the …\n"],["new","Stalker","Stalker.html#method-c-new","(gamespace, options = {})","<p>Initialization of the Stalker unit requires the gamespace for collision\nchecks, sets the sprite and  …\n"],["new","Turret","Turret.html#method-c-new","(gamespace, options = {})","<p>Initializing a <code>Turret</code> builds a new\n<code>Chingu::Animation</code> with the turret sprites. Each time a\n<code>Turret</code> gets …\n"],["new","Warp","Warp.html#method-c-new","(options = {})","<p>Sets the image of a warp as well as its fade rate.\n"],["play","GameOver","GameOver.html#method-i-play","()","<p>Switches the game state. Calls <code>Play.new</code> instead of just Play\nin order to call the initialize method instead …\n"],["play","Splash","Splash.html#method-i-play","()","<p>A method called when the player presses space in order to play the game.\nUses the <code>transitional_game_state</code> …\n"],["setup","Splash","Splash.html#method-i-setup","()","<p>A setup method called by the chingu library when the <code>Splash</code>\nclass gets pushed into the game state stack/gets …\n"],["shoot_down","Player","Player.html#method-i-shoot_down","()","<p>Sets the shooting vector&#39;s y part to <code>BULLET_VELOCITY</code>.\n"],["shoot_left","Player","Player.html#method-i-shoot_left","()","<p>Sets the shooting vector&#39;s x part to <code>-BULLET_VELOCITY</code>.\n"],["shoot_right","Player","Player.html#method-i-shoot_right","()","<p>Sets the shooting vector&#39;s x part to <code>BULLET_VELOCITY</code>.\n"],["shoot_up","Player","Player.html#method-i-shoot_up","()","<p>Sets the shooting vector&#39;s y part to <code>-BULLET_VELOCITY</code>.\n"],["take_damage","Stalker","Stalker.html#method-i-take_damage","()","<p>A common method to enemies, reducing their HP by one.\n"],["take_damage","Turret","Turret.html#method-i-take_damage","()","<p>A common <code>Enemy</code> method - reduces the unit&#39;s HP by one and\nchanges the sprite.\n"],["update","Bullet","Bullet.html#method-i-update","()","<p>Updating position is not necessary thanks to the velocity trait. In case\nthe bullet is out of bounds, …\n"],["update","BulletTurret","BulletTurret.html#method-i-update","()","<p>As velocity is set by chingu, the only thing update does is that it checks\nwhether there&#39;s any reason …\n"],["update","ExplosionParticle","ExplosionParticle.html#method-i-update","()","<p>In case a particle collides with the gamespace boundaries, velocity gets\ncorrected (impact angle to the …\n"],["update","Play","Play.html#method-i-update","()","<p>Update loop does three major things each frame:\n<p>Collides enemies with player&#39;s bullets and reduces …\n"],["update","Player","Player.html#method-i-update","()","<p>Method updating the player each frame. Player&#39;s sprite gets rotated to\ncorrespond to his movement …\n"],["update","PopupText","PopupText.html#method-i-update","()","<p>Updating the popuptext changes the y coordinate and slowly fades the\nmessage out.\n"],["update","Stalker","Stalker.html#method-i-update","()","<p>Every time a Stalker unit gets updated, they move in a constant speed\ntowards the player. Their sprite …\n"],["update","Turret","Turret.html#method-i-update","()","<p>Updating a <code>Turret</code> only consists of shooting a bullet if the\nframecounter got far enough.\n"],["update","Warp","Warp.html#method-i-update","()","<p>Destroys a <code>Warp</code> if it faded out.\n"],["prkwars.gemspec","","prkwars_gemspec.html","","<p>require &#39;rake&#39;\n<p>Gem::Specification.new do |s|\n\n<pre>s.name        = &#39;prkwars&#39;\ns.version     = &#39;0.0.7&#39; ...</pre>\n"]]}}